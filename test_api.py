#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã HydroMeteo API"""

import requests
import json
from datetime import datetime, timedelta

BASE_URL = "http://localhost:8000"

def test_health():
    """–¢–µ—Å—Ç health endpoint"""
    response = requests.get(f"{BASE_URL}/health")
    assert response.status_code == 200
    data = response.json()
    print(f"‚úÖ Health check: {data.get('status')}")
    return data

def test_timeseries():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä—è–¥–æ–≤"""
    payload = {
        "dataset": "waves",
        "variable": "VHM0",
        "lat": 59.5,
        "lon": 24.8,
        "start_utc": (datetime.utcnow() - timedelta(days=2)).isoformat() + "Z",
        "end_utc": datetime.utcnow().isoformat() + "Z"
    }
    
    response = requests.post(f"{BASE_URL}/api/timeseries", json=payload)
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ Timeseries: –ø–æ–ª—É—á–µ–Ω–æ {len(data.get('values', []))} —Ç–æ—á–µ–∫")
        if data.get('values'):
            print(f"   –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {data['values'][-1]} {data.get('unit')}")
    else:
        print(f"‚ùå Timeseries failed: {response.status_code}")
        print(f"   {response.text}")
    
def test_ice():
    """–¢–µ—Å—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –ª—å–¥—É"""
    payload = {
        "lat": 65.0,  # –°–µ–≤–µ—Ä–Ω–∞—è —á–∞—Å—Ç—å –ë–∞–ª—Ç–∏–∫–∏
        "lon": 23.0,
        "start_utc": (datetime.utcnow() - timedelta(days=1)).isoformat() + "Z",
        "end_utc": datetime.utcnow().isoformat() + "Z"
    }
    
    response = requests.post(f"{BASE_URL}/api/ice-timeseries", json=payload)
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ Ice data: SIC={len(data.get('siconc', []))} —Ç–æ—á–µ–∫, SIT={len(data.get('sithick', []))} —Ç–æ—á–µ–∫")
    else:
        print(f"‚ùå Ice data failed: {response.status_code}")

if __name__ == "__main__":
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï HYDROMETEO API")
    print("=" * 40)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        health_data = test_health()
        
        # –ï—Å–ª–∏ API –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –µ—Å—Ç—å —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if health_data.get("cm_user"):
            print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
            test_timeseries()
            test_ice()
        else:
            print("\n‚ö†Ô∏è –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ CMDS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
            print("   –ó–∞–ø–æ–ª–Ω–∏—Ç–µ COPERNICUSMARINE_USERNAME –∏ COPERNICUSMARINE_PASSWORD –≤ backend/.env")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω: cd backend && run_windows.bat")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
